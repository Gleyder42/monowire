[versions]
# Kotlin dependency injection framework
# https://insert-koin.io/
koin = "3.5.6"
# Kotlin version
kotlinCoroutines = "1.9.0-RC"
# Annotions for Kotlin dependency injection framework
# https://insert-koin.io/docs/reference/koin-annotations/start
koin-annotation = "1.3.1"
# Logger
# https://logback.qos.ch/
logback = "1.5.6"
# Test runner
# https://junit.org/junit5/
junit = "5.10.2"
# Assertions library
# https://assertj.github.io/doc/
assertj = "3.25.1"
# Arrow brings idiomatic functional programming to Kotlin
# https://arrow-kt.io/
arrow = "1.2.4"
# A type-safe HTTP client for Android and Java
# https://square.github.io/retrofit/
retrofit = "2.11.0"
# Kotlin test framework
# https://kotest.io/
kotest = "5.9.1"
kotestKoin = "1.3.0"
kotestArrow = "1.4.0"
# Mocking library for Kotlin
# https://mockk.io/
mockk = "1.13.11"
# Parses Json, Toml or other formats to Java classe
# https://github.com/FasterXML/jackson
jackson = "2.17.1"
# Utility methods for testing coroutines
coroutinesTest = "1.8.1"
# Library to generate typesafe methods from sql queries
sqldelight = "2.0.2"
# Jdby driver for sqlite
sqliteJdbc = "3.46.0.0"
# Kotlin gradle plugins
kotlinGradlePlugin = "2.0.0"
# ksp is an annotation processing gradle plugin for Kotlin
ksp = "2.0.0-1.0.22"

[libraries]
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-annotation = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotation"}
koin-kspCompiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotation"}
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin"}
koin-testJunit = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }

junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fxCoroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-retrofit = { module = "io.arrow-kt:arrow-core-retrofit", version.ref = "arrow" }

retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }

kotest-junitRunner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotestArrow" }
kotest-koin = { module = "io.kotest.extensions:kotest-extensions-koin", version.ref = "kotestKoin" }
kotest-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest"}

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-toml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-toml", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson"}
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dateTime = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

kotlinx-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }

sqldelight-sqliteDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutinesExtensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

sqliteJdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqliteJdbc" }

kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
kspSymbolProcessing = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

[plugins]
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
