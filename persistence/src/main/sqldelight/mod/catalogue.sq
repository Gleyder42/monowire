addMod:
INSERT INTO Mod(id, version, displayName, author) VALUES (:id, :version, :displayName, :author);

addModFeature:
INSERT INTO ModFeature(key, modId, modFiles, version)
VALUES (:modFeatureKey, :modId, :modFiles, :modVersion);

addModFeatureDependency {
    INSERT INTO ModFeatureDependeny(
        modId, modVersion, modFeatureKey,
        dependencyId, dependencyVersion, dependencyFeatureKey
    )
    VALUES (
    :modId, :modVersion, :modFeatureKey,
    :dependencyModId, :dependencyModVersions, :dependencyModFeatureKey
    );
}

getModFeatureDependencies:
SELECT dependencyId, dependencyVersion, dependencyFeatureKey FROM ModFeatureDependeny
WHERE modId = :modId AND modVersion = :modVersion AND modFeatureKey = :modFeatureKey;

removeMod:
DELETE FROM Mod WHERE id == :id AND version == :version RETURNING count();

getModDetail:
SELECT Mod.id, Mod.version, Mod.author, Mod.displayName
FROM Mod
WHERE id == :modId AND version == :modVersion;

getModFeatures:
SELECT key, modFiles FROM ModFeature
WHERE ModFeature.version == :version AND ModFeature.modId = :modId;

getModFeature:
SELECT modFiles FROM ModFeature
WHERE version == :version AND modId = :modId AND key = :featureKey;

exists:
SELECT count() FROM Mod WHERE Mod.id == :id AND Mod.version == :version;

getCompleteMod:
SELECT
    id,
    feat.version,
    displayName,
    author,
    key,
    feat.modId,
    modFiles,
    dependencyFeatureKey,
    dependencyId,
    dependencyVersion
FROM Mod
    INNER JOIN ModFeature feat ON Mod.version = feat.version AND feat.modId = Mod.id
LEFT JOIN
    ModFeatureDependeny dep ON dep.modId = Mod.id AND dep.modVersion = Mod.version
WHERE Mod.id == :modId AND Mod.version == :modVersion;